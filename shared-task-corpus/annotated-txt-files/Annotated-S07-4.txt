title
SemEval-2007 Task 04: Classification of Semantic Relations between Nominals
abstract
The NLP community has shown a renewed interest in deeper semantic analyses, among them automatic recognition of relations between pairs of words in a text. We present an evaluation task designed to provide a framework for comparing different approaches to classifying semantic relations between nominals in a sentence. This is part of SemEval, the 4 th edition of the semantic evaluation event previously known as SensEval. We define the task, describe the training/test data and their creation, list the participating systems and discuss their results. There were 14 teams who submitted 15 systems.

Task Description and Related Work
The theme of Task 4 is the <TASK>classification of semantic relations between simple nominals (nouns or base noun phrases) other than named entities</TASK> -honey bee, for example, shows an instance of the Product-Producer relation. The classification occurs in the context of a sentence in a written English text. Algorithms for classifying semantic relations can be applied in information retrieval, information extraction, text summarization, question answering and so on. The recognition of textual entailment  is an example of successful use of this type of deeper analysis in high-end NLP applications.
The literature shows a wide variety of methods of nominal relation classification. They depend as much on the training data as on the domain of application and the available resources. Rosario and Hearst (2001) classify noun compounds from the domain of medicine, using 13 classes that describe the semantic relation between the head noun and the modifier in a given noun compound. Rosario et al. (2002) classify noun compounds using the MeSH hierarchy and a multi-level hierarchy of semantic relations, with 15 classes at the top level. Nastase and Szpakowicz (2003) present a two-level hierarchy for classifying noun-modifier relations in base noun phrases from general text, with 5 classes at the top and 30 classes at the bottom; other researchers (Turney and Littman, 2005;Turney, 2005;Nastase et al., 2006) have used their class scheme and data set. Moldovan et al. (2004) propose a 35class scheme to classify relations in various phrases; the same scheme has been applied to noun compounds and other noun phrases (Girju et al., 2005). Chklovski and Pantel (2004) introduce a 5-class set, designed specifically for characterizing verb-verb semantic relations. Stephens et al. (2001) propose 17 classes targeted to relations between genes. Lapata (2002) presents a binary classification of relations in nominalizations.
There is little consensus on the relation sets and algorithms for analyzing semantic relations, and it seems unlikely that any single scheme could work for all applications. For example, the gene-gene relation scheme of Stephens et al. (2001), with relations like X phosphorylates Y, is unlikely to be transferred easily to general text.
We have created a benchmark data set to allow the evaluation of different semantic relation classification algorithms. We do not presume to propose a single classification scheme, however alluring it would  

Building the Annotated Data Sets
Ours is a new evaluation task, so we began with data set creation and annotation guidelines. The data set that Nastase and Szpakowicz (2003) created had relation labels and part-of-speech and WordNet sense annotations, to facilitate classification. (Moldovan et al., 2004;Girju et al., 2005) gave the annotators an example of each phrase in a sentence along with WordNet senses and position of arguments. Our annotations include all these, to support a variety of methods (since we work with relations between nominals, the part of speech is always noun). We have used WordNet 3.0 on the Web and sense index tags.
We chose the following semantic relations: Cause-Effect, Content-Container, Instrument-Agency, Origin-Entity, Part-Whole, Product-Producer and Theme-Tool. We wrote seven detailed definitions, including restrictions and conventions, plus prototypical positive and near-miss negative examples. For each relation separately, we based data collection on wild-card search patterns that Google allows. We built the patterns manually, following Hearst (1992) and Nakov and Hearst (2006). Instances of the relation Content-Container, for example, come up in response to queries such as "* contains *", "* holds *", "the * in the *". Following the model of the Senseval-3 English Lexical Sample Task, we set out to collect 140 training and at least 70 test examples per relation, so we had a number of different patterns to ensure variety. We also aimed to collect a balanced number of positive and negative examples. The use of heuristic patterns to search for both positive and negative examples should naturally result in negative examples that are near misses. We believe that near misses are more useful for supervised learning than negative examples that are generated randomly.
"Among the contents of the &lt;e1&gt;vessel&lt;/e1&gt; were a set of carpenter's &lt;e2&gt;tools&lt;/e2&gt;, several large storage jars, ceramic utensils, ropes and remnants of food, as well as a heavy load of ballast stones." WordNet(e1) = "vessel%1:06:00::", WordNet(e2) = "tool%1:06:00::", Content-Container(e2, e1) = "true", Query = "contents of the * were a" Figure 1: Annotations illustrated Figure 1 illustrates the annotations. We tag the nominals, so parsing or chunking is not necessary. For Task 4, we define a nominal as a noun or base noun phrase, excluding names entities. A base noun phrase, e.g., lawn or lawn mower, is a noun with premodifiers. We also exclude complex noun phrases (e.g., with attached prepositional phrases -the engine of the lawn mower).
The procedure was the same for each relation.  1 shows the number of positive and negative ex-amples for each relation. 1 The average inter-annotator agreement on relations (true/false) after the independent annotation step was 70.3%, and the average agreement on WordNet sense labels was 71.9%. In the process of arriving at a consensus between annotators, the definition of each relation was revised to cover explicitly cases where there had been disagreement. We expect that these revised definitions would lead to much higher levels of agreement than the original definitions did.

The Participants
The task of classifying semantic relations between nominals has attracted the participation of 14 teams who submitted 15 systems. Table 4 lists the systems, the authors and their affiliations, and brief descriptions. The systems' performance information in terms of precision, recall, F -measure and accuracy, macroaveraged over all relations, appears in Table 3. We computed these measures as described in Lewis (1991).
We distinguish four categories of systems based on the type of information used -WordNet senses and/or Google queries: WordNet = "YES" or WordNet = "NO" tells us only whether a system uses the WordNet sense labels in the data sets. A system may use WordNet internally for varied purposes, but ignore our sense labels; such a system would be in category A or C. Based on the input variation, each submitted system may have up to 4 variations -A,B,C,D.
Table 2 presents three baselines for a relation. Majority always guesses either "true" or "false", whichever is the majority in the test set (maximizes accuracy). Alltrue always guesses "true" (maximizes recall). Probmatch randomly guesses "true" ("false") with the probability matching the distribution of "true" ("false") in the test dataset (balances precision and recall).
We present the results in Table 3 grouped by category, to facilitate system comparison. 1 As this paper serves also as a documentation of the data set, the order of relations in the table is the same as in the data set.   

Discussion
The highest average accuracy on Task 4 was 76.3%. Therefore, the average initial agreement between annotators (70.3%), before revising the definitions, is not an upper bound on the accuracy that can be achieved. That the initial agreement between annotators is not a good indicator of the accuracy that can be achieved is also supported by the low correlation Table 5: The best results per relation. Precision, recall, F -measure and accuracy macro-averaged over each system's performance on all 7 relations. Base-F shows the baseline F -measure (alltrue), Base-Acc -the baseline accuracy score (majority). The last column shows the average rank for each relation.
of 0.15 between the Acc column in Table 5 and the Agreement column in Table 1.
We performed various analyses of the results, which we summarize here in four questions. We write X i to refer to four possible system categories (A i , B i , C i , and D i ) with four possible amounts of training data (X 1 for training examples 1 to 35, X 2 for 1 to 70, X 3 for 1 to 105, and X 4 for 1 to 140).

Does more training data help?
Overall, the results suggest that more training data improves the performance. There were 17 cases in which we had results for all four possible amounts of training data. All average F -measure differences, F (X 4 )-F (X i ) where X = A to D, i = 1 to 3, for these 17 sets of results are statistically significant: F (X 4 )-F (X 1 ): N = 17, avg = 8.3, std = 5.8, min = 1.1, max = 19.6, t-value = −5.9, p-value = 0.00001. F (X 4 )-F (X 2 ): N = 17, avg = 4.0, std = 3.7, min = −3.5, max = 10.5, t-value = 4.5, p-value = 0.0002. F (X 4 )-F (X 3 ): N = 17, avg = 0.9, std = 1.7, min = −2.6, max = 4.7, t-value = 2.1, p-value = 0.03.

Does WordNet help?
The statistics show that WordNet is important, although the contribution varies across systems. Three teams submitted altogether 12 results both for A 1 -A 4 and B 1 -B 4 . The average F -measure difference, F (B i )-F (A i ), i = 1 to 4, is significant: F (B i )-F (A i ): N = 12, avg = 6.1, std = 8.4, min = −4.5, max = 21.2, t-value = −2.5, p-value = 0.01.
The results of the UCD-FC system actually went down when WordNet was used. The statistics for the remaining two teams, however, are a bit better: F (B i )-F (A i ): N = 8, avg = 10.4, std = 6.7, min = −1.0, max = 21.2, t-value = −4.4, p-value = 0.002.

Does knowing the query help?
Overall, knowing the query did not seem to improve the results. Three teams submitted 12 results both for A 1 -A 4 and C 1 -C 4 . The average F -measure difference, F (C i )-F (A i ) , i = 1 to 4, is not significant: F (C i )-F (A i ): N = 12, avg = 0.9, std = 1.8, min = −2.0, max = 5.0, t-value = −1.6, p-value = 0.06.
Again, the UCD-FC system differed from the other systems in that the A and C scores were identical, but even averaging over the remaining two systems and 8 cases does not show a statistically significant advantage:

Are some relations harder to classify?
Table 5 shows the best results for each relation in terms of precision, recall, and F -measure, per team and system category. Column Base-F presents the baseline F -measure (alltrue), while Base-Acc the baseline accuracy score (majority). For all seven relations, the best team significantly outperforms the baseline. The category of the best-scoring system in almost every case is B 4 (only the ILK B 4 system scored second on the Origin-Entity relation).
Table 5 suggests that some relations are more difficult to classify than others. The best F -measure ranges from 83.7 for Product-Producer to 68.6 for Origin-Entity. The difference between the best Fmeasure and the baseline F -measure ranges from 23.3 for Part-Whole to 3.7 for Product-Producer. The difference between the best accuracy and the baseline accuracy ranges from 31.0 for Content-Container to 10.7 for Product-Producer.
The F column shows the best result for each relation, but similar differences among the relations may be observed when all results are pooled. The Avg. rank column computes the average rank of each relation in the ordered list of relations generated by each system. For example, Product-Producer is often listed as the first or the second easiest relation (with an average rank of 1.7), while Origin-Entity and Theme-Tool are identified as the most difficult relations to classify (with average ranks of 6.0).

Conclusion
This paper describes a new semantic evaluation task, Classification of Semantic Relations between Nominals. We have accomplished our goal of providing a framework and a benchmark data set to allow for comparisons of methods for this task. The data included different types of information -lexical semantic information, context, query used -meant to facilitate the analysis of useful sources of information for determining the semantic relation between nominals. The results that the participating systems have reported show successful approaches to this difficult task, and the advantages of using lexical semantic information.
The success of the task -measured in the interest of the community and the results of the participating systems -shows that the framework and the data are useful resources. By making this collection freely accessible, we encourage further research into this domain and integration of semantic relation algorithms in high-end applications.


